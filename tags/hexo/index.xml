<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hexo on FuShaoLei Blog</title>
    <link>https://fushaolei.github.io/tags/hexo/</link>
    <description>Recent content in Hexo on FuShaoLei Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 21 Sep 2020 22:01:51 +0000</lastBuildDate><atom:link href="https://fushaolei.github.io/tags/hexo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHub Action &#43; Hexo 实现在线写作</title>
      <link>https://fushaolei.github.io/post/github-action-hexo/</link>
      <pubDate>Mon, 21 Sep 2020 22:01:51 +0000</pubDate>
      
      <guid>https://fushaolei.github.io/post/github-action-hexo/</guid>
      <description>心血来潮，研究了一下午，当写完的时候，上网一查，才发现已经有好多人都写过类似的文章了，但我感觉不记录就好像吃了亏什么的，所以，写了一篇蛮常见的文章，以此慰己
零，前言 hexo 是一款快速、简洁且高效的静态博客框架，因为它的高可定制性，所以深受各个程序员的喜爱，我也曾一头扎进去研究过，先后开发了white和hiya主题，在使用过程中，也渐渐的发现了一些问题
情景一，当浏览自己某篇博客时发现了一些错误之后想要马上修改时，将要经历经历一下步骤
在本地的hexo博客文件夹中找到source/_post文件夹 找到那个md文件，打开 修改 然后还要经历hexo clean,hexo g，hexo d 情景二，当想要马上写一篇博客时，需要经历以下步骤
在博客根目录中hexo n &amp;quot;博客名&amp;quot; 点击进入source/_post文件夹中找到这个md文件并打开 写博客 然后还要经历hexo clean,hexo g，hexo d三连 以上过程想必使用过hexo博客的人都经历过吧？不知道你们什么感觉，反正这对于我这种急性子的人来说简直是忍不了(╯‵□′)╯︵┻━┻，而且每次写完博客啊，修改完博客啊之类的，还必须经历过hexo clean,hexo g，hexo d才可以将博客推送到网上去，这玩意我一开始还有耐心，现在就不行了(ノ｀Д)ノ，幸好后来发现了github action可以实现自动部署，再结合自己以往开发hexo主题的经验，做出来了可以在线新建博客或者修改博客的功能（具体可参观我的博客），效果如下：
新建文章
修改文章
就这样，利用github action交给github去做hexo clean,hexo g，hexo d三连，很方便的实现了新建文章和修改文章，即优雅，又方便，那么这又是如何做到的呢？下面我将分为两个部分来说明，第一部分是如何结合github action来实现自动部署，第二部分是如何点击某个按钮后进入新建文章页，和修改文章页。
一，使用github aciton实现自动部署 1.在github新建一个仓库，专门用来存放源文件，我的源文件如下，供各位参考
什么？你不会要先git clone到本地后，再将源文件复制粘贴到里面再上传吧？这也太low太笨拙了吧哈哈哈，咳咳，如果你不会将本地仓库关联到远程仓库的话，请按下边步骤进行
在hexo源文件夹中 hexo init 进行初始化 关联远程仓库 git remote add origin git@github.com:&amp;lt;你的用户名&amp;gt;/&amp;lt;存放源文件的仓库名&amp;gt;.git git pull --rebase origin master和远程仓库进行一个同步 然后依次进行git add .，git commit -m &amp;quot;init repo&amp;quot;，git push -u origin master ，然后就大功告成啦 上传好的源文件在github中如下
注意：如theme文件夹中主题文件中有.git文件，请将其删除在上传</description>
    </item>
    
    <item>
      <title>white主题配置</title>
      <link>https://fushaolei.github.io/post/doc-white-configration/</link>
      <pubDate>Sun, 09 Aug 2020 23:31:29 +0000</pubDate>
      
      <guid>https://fushaolei.github.io/post/doc-white-configration/</guid>
      <description>👋Hi there 欢迎使用本主题 ，White 是一个在个性和极简之间徘徊的主题，（因为作者本身性格就是这样的人，而且搞不好心态爆炸会删库跑路（现已跑路。。。），还请喜欢的各位及时fork🤣
如果你喜欢这款主题的话，不妨给我一个star 感激不尽！
安装 方便备份和更新
fork 本项目 git clone https://github.com/&amp;lt;你的用户名&amp;gt;/hexo-theme-white.git themes/white 修改根目录下的_config.yml 为theme: white 主题配置 其实config文件里写的很明白了，现在就重新列一下，添加一些不必要的说明
可自定义style ############## style ############## style: layout: max-width: 1130px #总体宽度 post-max-width: 800px #文章内容宽度 color: theme-main: &amp;#34;#1A98FF&amp;#34; # 主色调 theme-secondary: &amp;#34;#DDF0FF&amp;#34; # 次色调 text-main: &amp;#34;#333333&amp;#34; # 文字主色调 text-secondary: &amp;#34;#898FA0&amp;#34; # 文字次色调 animation: open: true # 如果开启动画的话会引入animation.css 主页配置 home页和archive可选配置 # home页可选类型 home: type: &amp;#34;img&amp;#34; # 主页的类型，可选 home | img | simple # archive页可选类型 archive: type: &amp;#34;simple&amp;#34; # archive的类型，可选 img | simple type为home就是一个封面，为img就是图片加标题的形式，simple就是极简模式</description>
    </item>
    
  </channel>
</rss>
